#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Author: SunGyo Kim
# Email: Kimsg1984@gmail.com
# irc.freenode #ubuntu-ko Sungyo

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
reload(sys)
import logging
import logging.config 
import signal
sys.setdefaultencoding('utf-8')

# 인자값을 먼저 받고, 로그 설정을 한 뒤에 임폴트를 하자

if os.path.isdir(os.path.join(".","src")) and os.path.isfile(os.path.join(".","setup.py")):
	sys.path.append(os.path.realpath("src"))

# notes_dir = os.path.realpath("notes")
notes_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'notes')

class Main():
	def __init__(self, argv):
		## Parser Setting ##
		usage = u"Usage: %prog [options]"
		parser = __import__('optparse').OptionParser(usage)

		## Parser Option ##	
		parser.add_option('-d', '--debug', dest='debug', action='store_true', help=u'debugging mode')
		parser.add_option('-c', '--console', dest='console', action='store_true', help=u'concole mode')


		## command logic  ##
		(opt, argv) = parser.parse_args(argv)
		if opt.debug:
			log_level = logging.DEBUG
		else:
			log_level = logging.INFO

		logging.basicConfig(format = '%(asctime)s [%(filename)s:%(lineno)s|%(levelname)s] %(funcName)s(): \t %(message)s', level = log_level)
		log = logging.getLogger('root')

		try:
			from PyQt4.QtGui import QApplication
		except ImportError, err:
			log.warning("Error: %s%s" % (str(err), os.linesep))
			sys.exit(1)

		try:
			from hen.hen import EggEditor
			from hen.egg import Egg
		except ImportError, err:
			log.warning("Error: %s%s" % (str(err), os.linesep))
			sys.exit(1)

		self.app = QApplication(argv)
		self.editor = EggEditor()
		self.app.installEventFilter(self.editor)

		note = Egg()
		# note.setFile(os.path.join(notes_dir, 'test2.note'))
		note.setFile(os.path.join(notes_dir, 'test3.note'))
		self.editor.setNote(note)
		e = self.editor
		a = self.app
		c = e.editor.textCursor()
		c.movePosition(c.Down)
		# c.insertHtml('<a href="https://google.com">https://google.com</a>')

		if opt.console:
			import PyQt4.QtGui
			import PyQt4.QtCore
			from IPython import embed
			self.editor.show()
			embed()
			sys.exit()
		else:
			self.editor.show()

		# self.editor2 = EggEditor()
		# self.app.installEventFilter(self.editor2)
		# self.editor2.show()
		# note2 = Egg()
		# note2.setFile(os.path.join(notes_dir, 'test2_3.note'))
		# self.editor2.setNote(note2)

	def exec_(self):
		try:
			signal.signal(signal.SIGINT, signal.SIG_DFL)
			sys.exit(self.app.exec_())

		except KeyboardInterrupt:
	 		pass

if __name__ == '__main__':
	m = Main(sys.argv)
	m.exec_()